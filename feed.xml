<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ghkdxofla.github.io</id><title>Taelim's blog</title><subtitle>Taelim's blog</subtitle> <updated>2022-12-16T02:49:39+09:00</updated> <author> <name>Taelim Hwang</name> <uri>https://ghkdxofla.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ghkdxofla.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2022 Taelim Hwang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>다시 시작</title><link href="https://ghkdxofla.github.io/posts/%EB%8B%A4%EC%8B%9C%EC%8B%9C%EC%9E%91/" rel="alternate" type="text/html" title="다시 시작" /><published>2022-12-16T00:00:00+09:00</published> <updated>2022-12-16T00:00:00+09:00</updated> <id>https://ghkdxofla.github.io/posts/%EB%8B%A4%EC%8B%9C%EC%8B%9C%EC%9E%91/</id> <content src="https://ghkdxofla.github.io/posts/%EB%8B%A4%EC%8B%9C%EC%8B%9C%EC%9E%91/" /> <author> <name>Taelim Hwang</name> </author> <category term="General" /> <category term="Life" /> <summary> 멈춘지 오래 요새 공부에 재미도 붙였고, 조금은 개발자 다운 개발자가 되어가는게 느껴진다. 정리하는 것이 습관화 되고, 하루에 조금이라도 공부하는 것이 일상화 된 김에 다시 블로그에도 글을 적어볼까 한다. 내용은? 지금까지의 블로그 글은 사실 기록보다는 보여주기식에 가까웠다. 내가 개발자다, 늘 공부한다는걸 Showing 해봤자, 모두가 알게되는 것은 얕은 나의 모습이다. 그리고 가장 중요한 점은, 나조차도 블로그에 가끔 온다는 것이다. 이유가 뭘까 생각해보니, 가볍게 찾은 블로그 내용이나 읽을 자료들 또는 내가 그냥 공부했던 것들을 올리니 어차피 급할 때는 구글링이지 내 블로그를 샅샅이 뒤지지는 않게 되었다. 그리고 그런 급할 때 찾는 자료들은 이미 노션에 체계화하는 방법을 잘 구... </summary> </entry> <entry><title>Typescript로 개발하는 React with MobX (1)</title><link href="https://ghkdxofla.github.io/posts/typescript-mobx-1/" rel="alternate" type="text/html" title="Typescript로 개발하는 React with MobX (1)" /><published>2021-04-22T00:00:00+09:00</published> <updated>2021-04-22T00:00:00+09:00</updated> <id>https://ghkdxofla.github.io/posts/typescript-mobx-1/</id> <content src="https://ghkdxofla.github.io/posts/typescript-mobx-1/" /> <author> <name>Taelim Hwang</name> </author> <category term="Typescript" /> <category term="React" /> <category term="MobX" /> <category term="Front-end" /> <summary> 글 제목은 Typescript인데… 천천히 글을 연재하면서 내용을 추가할 예정이다. 아무튼 내 맘대로 React 얘기도 했다가, MobX 얘기도 했다가, Typescript 얘기도 할 것이니 문제 없음. 프로젝트 구조 항상 새로운 프로젝트를 시작할 때면, 어떻게 프로젝트 구조를 잡아야 할 지가 큰 고민일 때가 많다. 이럴 때는 다른 프로젝트 구조를 참고하기도 하고, 사용하는 라이브러리나 프레임워크에서 제공하는 템플릿을 활용할 때가 많다. 현재 개발 중인 프로젝트의 구조 또한 지인이 개발하던 프로젝트의 구조를 많이 참고하여 내 입맛에 맞게 변형한 것을 사용한다. 즉, 나 또는 같이 개발하기 편하고, 구조적으로 명확한 단위로 나뉜다면 어떻게 구조를 잡든 합리적인 구조라 볼 수 있... </summary> </entry> <entry><title>Typescript로 개발하는 React with MobX (0)</title><link href="https://ghkdxofla.github.io/posts/typescript-mobx-0/" rel="alternate" type="text/html" title="Typescript로 개발하는 React with MobX (0)" /><published>2021-04-21T00:00:00+09:00</published> <updated>2021-04-21T00:00:00+09:00</updated> <id>https://ghkdxofla.github.io/posts/typescript-mobx-0/</id> <content src="https://ghkdxofla.github.io/posts/typescript-mobx-0/" /> <author> <name>Taelim Hwang</name> </author> <category term="Typescript" /> <category term="React" /> <category term="MobX" /> <category term="Front-end" /> <summary> 프론트엔드를 개발해 보겠습니다 UI… 사용자에게 보여지는 화면… Server와 Client에서 Client를 맡고 있는… 프론트…엔드… 여러 라이브러리와 프레임워크, 언어로 앱 또는 웹 어플리케이션을 만들 때 사용자에게 보여지는 GUI 부분을 우리는 Front-end라 칭한다. 다음의 블로그에서 참조하면 아래와 같은 설명을 확인할 수 있다. 프론트엔드와 백엔드는 프로그램 인터페이스와 서비스의 최초 사용자와 관련된 특성을 나타내는데 사용되는 용어이다 (여기서 “사용자”란 사람 또는 프로그램이 될 수 있다). 프론트엔드 응용프로그램은 사용자들과 직접 상호작용을 하는 프로그램이다. 아무튼, 이번에는 React를 써서 Front-end를 개발해보겠다. 언어는 Typescript. 그리고 뭔... </summary> </entry> <entry><title>final, static 그리고 final static. 아, Immutable Object</title><link href="https://ghkdxofla.github.io/posts/final_static/" rel="alternate" type="text/html" title="final, static 그리고 final static. 아, Immutable Object" /><published>2021-04-06T00:00:00+09:00</published> <updated>2021-04-06T00:00:00+09:00</updated> <id>https://ghkdxofla.github.io/posts/final_static/</id> <content src="https://ghkdxofla.github.io/posts/final_static/" /> <author> <name>Taelim Hwang</name> </author> <category term="Programming Language" /> <category term="Java" /> <summary> final? 사실, Java 외에도 final keyword는 많은 언어에 존재한다. 주로는 상수, 메소드, 클래스 정의 후 고정된 상태를 만들기 위해 사용한다. 고정된 상태라 하면, 불변하는 것이라 생각할 수 있다. 그렇다면 final로 생성한 변수가 불변인가? 그런데, 불변하다는 것이 정확히 무엇인가? Immutable? 정의 Immutable Object는 생성 후 상태를 변경하지 못하는 객체를 일컫는다. 굳이 객체 외에도 Immutable 하다는 것은 한 번 정의된 대상이 상태 변경이 불가능 함을 의미한다. 한 번 할당하면 변경 안함! 재할당은 가능! 왜 쓰는가? Immutable Object를 사용하면 복제, 비교 시에 조작이 단순해진다. 성능 개선에도 영향을 준... </summary> </entry> <entry><title>Jest로 Test code 작성하기 (0)</title><link href="https://ghkdxofla.github.io/posts/jest-0/" rel="alternate" type="text/html" title="Jest로 Test code 작성하기 (0)" /><published>2021-04-01T00:00:00+09:00</published> <updated>2021-04-01T00:00:00+09:00</updated> <id>https://ghkdxofla.github.io/posts/jest-0/</id> <content src="https://ghkdxofla.github.io/posts/jest-0/" /> <author> <name>Taelim Hwang</name> </author> <category term="Jest" /> <category term="Test" /> <summary> Jest? Javascript에서 Test code 작성을 위해 사용하는 Framework이다. 다음의 특징을 가진다. Zero config : Config free, on most JavaScript projects Snapshots :Make tests which keep track of large objects with ease Isolated : Tests are parallelized by running them in their own processes Jest is a delightful JavaScript Testing Framework with a focus on simplicity. Installation Configuration 여러 방법이 있지만, ... </summary> </entry> </feed>
