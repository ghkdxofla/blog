

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://ghkdxofla.github.io</id>
  <title>Taelim's blog</title>
  <subtitle>Taelim's blog</subtitle>
  <updated>2021-01-13T23:28:18+09:00</updated>
  <author>
    <name>Taelim Hwang</name>
    <uri>https://ghkdxofla.github.io</uri>
  </author>
  <link href="/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://ghkdxofla.github.io" rel="alternate" type="text/html" />
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Taelim Hwang </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>systemd 옵션</title>
    <link href="https://ghkdxofla.github.io/posts/systemd-option/" rel="alternate" type="text/html" title="systemd 옵션" />
    <published>2020-07-23T00:00:00+09:00</published>
  
    <updated>2020-07-23T00:00:00+09:00</updated>
  
    <id>https://ghkdxofla.github.io/posts/systemd-option/</id>
    <content src="https://ghkdxofla.github.io/posts/systemd-option/" />
    <author>
      <name>Taelim Hwang</name>
    </author>

  
    
    <category term="OS" />
    
    <category term="Linux" />
    
  

  
    <summary>
      





      참조 링크

systemd 옵션

    </summary>
  

  </entry>

  
  <entry>
    <title>Microservice의 특징</title>
    <link href="https://ghkdxofla.github.io/posts/microservice/" rel="alternate" type="text/html" title="Microservice의 특징" />
    <published>2020-07-23T00:00:00+09:00</published>
  
    <updated>2020-07-23T00:00:00+09:00</updated>
  
    <id>https://ghkdxofla.github.io/posts/microservice/</id>
    <content src="https://ghkdxofla.github.io/posts/microservice/" />
    <author>
      <name>Taelim Hwang</name>
    </author>

  
    
    <category term="Network" />
    
    <category term="Architecture" />
    
    <category term="Microservice" />
    
  

  
    <summary>
      





      Microservice란?

서비스 디자인 스타일로서 작은 서비스의 결합을 통해 하나의 응용 프로그램을 개발하는 방법 
각각의 서비스는 독립적인 비지니스 로직으로 구성 
완전 자동화된 개발/배포 환경에 의해 각각 독립적으로 배포 
최소한의 중심적인 관리 체계 
각 시스템들은 다른 프로그래밍 언어, 다른 데이터 스토리지 기술로 작성 가능



Microservice를 사용하는 이유?

서비스를 충분히 작은 크기로 나누어 개발하되 상호 연계를 통해 좀 더 복잡하고 거대한 시스템을 만들어 갈 수 있음 
스케일링에도 높은 자유도 -&amp;gt; 클라우드 컴퓨팅이나 고확장성 시스템의 요구조건에 정확하게 부합

Monolithic Architecture와 비교

Monolithic 장점

  하나의 애플리케이션만 개발...
    </summary>
  

  </entry>

  
  <entry>
    <title>Load balancer (1)</title>
    <link href="https://ghkdxofla.github.io/posts/load-balancer-1/" rel="alternate" type="text/html" title="Load balancer (1)" />
    <published>2020-07-22T00:00:00+09:00</published>
  
    <updated>2020-07-22T00:00:00+09:00</updated>
  
    <id>https://ghkdxofla.github.io/posts/load-balancer-1/</id>
    <content src="https://ghkdxofla.github.io/posts/load-balancer-1/" />
    <author>
      <name>Taelim Hwang</name>
    </author>

  
    
    <category term="Network" />
    
    <category term="Server" />
    
    <category term="Load balancer" />
    
  

  
    <summary>
      





      로드 밸런싱?

부하분산 또는 로드 밸런싱(load balancing)은 컴퓨터 네트워크 기술의 일종 
둘 혹은 셋 이상의 중앙처리장치 혹은 저장장치와 같은 컴퓨터 자원들에게 작업을 나누는 것을 의미

로드밸런서 종류

운영체제 로드밸런서

  물리적 프로세서 간에 작업을 스케줄링


네트워크 로드밸런서

  사용 가능한 백엔드에서 네트워크 작업을 스케줄링


네트워크 로드밸런서 종류

L2(Data Link Layer)

  Mac Address Load Balancing
  예시 : Mac &amp;gt; 80–00–20–30–1C-47
  브릿지, 허브 등
  장점 : 구조가 간단, 신뢰성이 높다, 가격저렴, 성능이 좋다.
  단점 : Broadcast 패킷에 의해 성능저하 발생, 라우팅 등 상위레이어 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>HA Proxy란</title>
    <link href="https://ghkdxofla.github.io/posts/haproxy/" rel="alternate" type="text/html" title="HA Proxy란" />
    <published>2020-07-22T00:00:00+09:00</published>
  
    <updated>2020-07-22T00:00:00+09:00</updated>
  
    <id>https://ghkdxofla.github.io/posts/haproxy/</id>
    <content src="https://ghkdxofla.github.io/posts/haproxy/" />
    <author>
      <name>Taelim Hwang</name>
    </author>

  
    
    <category term="Network" />
    
    <category term="Server" />
    
    <category term="Load balancer" />
    
  

  
    <summary>
      





      HA Proxy

특징

  기존의 Load balancer는 Hardware 기반
  HA Proxy는 Software load balancer
  네트워크 스위치에서 제공하는 L4, L7 기능 제공


참조 링크

HA Proxy란? - Naver D2

    </summary>
  

  </entry>

  
  <entry>
    <title>Apscheduler(Python 스케쥴링 라이브러리)</title>
    <link href="https://ghkdxofla.github.io/posts/apscheduler/" rel="alternate" type="text/html" title="Apscheduler(Python 스케쥴링 라이브러리)" />
    <published>2020-07-21T00:00:00+09:00</published>
  
    <updated>2020-07-21T00:00:00+09:00</updated>
  
    <id>https://ghkdxofla.github.io/posts/apscheduler/</id>
    <content src="https://ghkdxofla.github.io/posts/apscheduler/" />
    <author>
      <name>Taelim Hwang</name>
    </author>

  
    
    <category term="Programming Language" />
    
    <category term="Python" />
    
    <category term="Library" />
    
    <category term="Apscheduler" />
    
  

  
    <summary>
      





      Apscheduler

Apscheduler란?

  Python code에 대한 Scheduling을 구성해주는 library


Template code
from apscheduler.jobstores.base import JobLookupError
from apscheduler.schedulers.blocking import BlockingScheduler
from apscheduler.schedulers.background import BackgroundScheduler
from .logger import Logger
import time
import datetime

logger = Logger(method='scheduler', dir='log', filename='scheduler.log'...
    </summary>
  

  </entry>

</feed>


